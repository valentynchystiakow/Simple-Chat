{"ast":null,"code":"import _objectSpread from\"D:/Courses/FullStackLearning/Projects/Simple-chat-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"D:/Courses/FullStackLearning/Projects/Simple-chat-main/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/Courses/FullStackLearning/Projects/Simple-chat-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/Courses/FullStackLearning/Projects/Simple-chat-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";//import JoinBlock component\nimport JoinBlock from\"./components/JoinBlock\";//import Chat component\nimport Chat from\"./components/Chat\";//import reducer\nimport reducer from\"./reducer\";//import sockets\nimport socket from\"./socket\";//import axios for making http requests from node js\nimport axios from\"axios\";//main App component\nimport{jsx as _jsx}from\"react/jsx-runtime\";function App(){var _ref;//useReducer - will change state depending on action type that come in reducer\nvar _React$useReducer=React.useReducer(reducer,{joined:false,roomId:null,userName:null,users:[],messages:[]}),_React$useReducer2=_slicedToArray(_React$useReducer,2),state=_React$useReducer2[0],dispatch=_React$useReducer2[1];//function that will dispatch action JOINED and check if user is authorized\nvar onLogin=function onLogin(_x){return(_ref=_ref||_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(obj){var _yield$axios$get,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:dispatch({type:\"JOINED\",payload:obj});//emit() - sends socket request on back end and giving to it username and roomid data\nsocket.emit(\"ROOM:JOIN\",obj);//taking from request obj and puttin it in data\n_context.next=4;return axios.get(\"/rooms/\".concat(obj.roomId));case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch({type:\"SET_DATA\",payload:data});case 7:case\"end\":return _context.stop();}},_callee);}))).apply(this,arguments);};//function that will dispatch action type SET_USERS\nvar setUsers=function setUsers(users){dispatch({type:\"SET_USERS\",payload:users});};//function that will dispatch action type ADD_MESSAGE\nvar addMessage=function addMessage(message){dispatch({type:\"NEW_MESSAGE\",payload:message});};//using UseEffect hook to rerender page with changes that have been made by socket's data\nReact.useEffect(function(){socket.on(\"ROOM:SET_USERS\",setUsers);socket.on(\"ROOM:NEW_MESSAGE\",addMessage);},[]);window.socket=socket;return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:!state.joined?/*#__PURE__*/_jsx(JoinBlock,{onLogin:onLogin}):/*#__PURE__*/_jsx(Chat,_objectSpread(_objectSpread({},state),{},{onAddMessage:addMessage}))});}export default App;","map":{"version":3,"names":["React","JoinBlock","Chat","reducer","socket","axios","jsx","_jsx","App","_ref","_React$useReducer","useReducer","joined","roomId","userName","users","messages","_React$useReducer2","_slicedToArray","state","dispatch","onLogin","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","obj","_yield$axios$get","data","wrap","_callee$","_context","prev","next","type","payload","emit","get","concat","sent","stop","apply","arguments","setUsers","addMessage","message","useEffect","on","window","className","children","_objectSpread","onAddMessage"],"sources":["D:/Courses/FullStackLearning/Projects/Simple-chat-main/src/App.js"],"sourcesContent":["import React from \"react\";\n//import JoinBlock component\nimport JoinBlock from \"./components/JoinBlock\";\n//import Chat component\nimport Chat from \"./components/Chat\";\n//import reducer\nimport reducer from \"./reducer\";\n//import sockets\nimport socket from \"./socket\";\n//import axios for making http requests from node js\nimport axios from \"axios\";\n\n//main App component\nfunction App() {\n  //useReducer - will change state depending on action type that come in reducer\n  const [state, dispatch] = React.useReducer(reducer, {\n    joined: false,\n    roomId: null,\n    userName: null,\n    users: [],\n    messages: [],\n  });\n\n  //function that will dispatch action JOINED and check if user is authorized\n  const onLogin = async (obj) => {\n    dispatch({\n      type: \"JOINED\",\n      payload: obj,\n    });\n    //emit() - sends socket request on back end and giving to it username and roomid data\n    socket.emit(\"ROOM:JOIN\", obj);\n    //taking from request obj and puttin it in data\n    const { data } = await axios.get(`/rooms/${obj.roomId}`);\n    dispatch({\n      type: \"SET_DATA\",\n      payload: data,\n    });\n  };\n  //function that will dispatch action type SET_USERS\n  const setUsers = (users) => {\n    dispatch({\n      type: \"SET_USERS\",\n      payload: users,\n    });\n  };\n\n  //function that will dispatch action type ADD_MESSAGE\n  const addMessage = (message) => {\n    dispatch({\n      type: \"NEW_MESSAGE\",\n      payload: message,\n    });\n  };\n\n  //using UseEffect hook to rerender page with changes that have been made by socket's data\n  React.useEffect(() => {\n    socket.on(\"ROOM:SET_USERS\", setUsers);\n    socket.on(\"ROOM:NEW_MESSAGE\", addMessage);\n  }, []);\n\n  window.socket = socket;\n\n  return (\n    <div className=\"App\">\n      {/* Throwing onLogin function through props,! - if user is not authorized he will get login form - in other case he will go to the chat */}\n      {!state.joined ? (\n        <JoinBlock onLogin={onLogin} />\n      ) : (\n        <Chat {...state} onAddMessage={addMessage} />\n      )}\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"+jBAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB;AACA,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C;AACA,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC;AACA,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B;AACA,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B;AACA,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,QAAS,CAAAC,GAAGA,CAAA,CAAG,KAAAC,IAAA,CACb;AACA,IAAAC,iBAAA,CAA0BV,KAAK,CAACW,UAAU,CAACR,OAAO,CAAE,CAClDS,MAAM,CAAE,KAAK,CACbC,MAAM,CAAE,IAAI,CACZC,QAAQ,CAAE,IAAI,CACdC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EACZ,CAAC,CAAC,CAAAC,kBAAA,CAAAC,cAAA,CAAAR,iBAAA,IANKS,KAAK,CAAAF,kBAAA,IAAEG,QAAQ,CAAAH,kBAAA,IAQtB;AACA,GAAM,CAAAI,OAAO,SAAP,CAAAA,OAAOA,CAAAC,EAAA,SAAAb,IAAA,CAAAA,IAAA,EAAAc,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,GAAG,MAAAC,gBAAA,CAAAC,IAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACxBd,QAAQ,CAAC,CACPe,IAAI,CAAE,QAAQ,CACdC,OAAO,CAAET,GACX,CAAC,CAAC,CACF;AACAvB,MAAM,CAACiC,IAAI,CAAC,WAAW,CAAEV,GAAG,CAAC,CAC7B;AAAAK,QAAA,CAAAE,IAAA,SACuB,CAAA7B,KAAK,CAACiC,GAAG,WAAAC,MAAA,CAAWZ,GAAG,CAACd,MAAM,CAAE,CAAC,QAAAe,gBAAA,CAAAI,QAAA,CAAAQ,IAAA,CAAhDX,IAAI,CAAAD,gBAAA,CAAJC,IAAI,CACZT,QAAQ,CAAC,CACPe,IAAI,CAAE,UAAU,CAChBC,OAAO,CAAEP,IACX,CAAC,CAAC,CAAC,wBAAAG,QAAA,CAAAS,IAAA,MAAAf,OAAA,GACJ,IAAAgB,KAAA,MAAAC,SAAA,IACD;AACA,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAI7B,KAAK,CAAK,CAC1BK,QAAQ,CAAC,CACPe,IAAI,CAAE,WAAW,CACjBC,OAAO,CAAErB,KACX,CAAC,CAAC,CACJ,CAAC,CAED;AACA,GAAM,CAAA8B,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,OAAO,CAAK,CAC9B1B,QAAQ,CAAC,CACPe,IAAI,CAAE,aAAa,CACnBC,OAAO,CAAEU,OACX,CAAC,CAAC,CACJ,CAAC,CAED;AACA9C,KAAK,CAAC+C,SAAS,CAAC,UAAM,CACpB3C,MAAM,CAAC4C,EAAE,CAAC,gBAAgB,CAAEJ,QAAQ,CAAC,CACrCxC,MAAM,CAAC4C,EAAE,CAAC,kBAAkB,CAAEH,UAAU,CAAC,CAC3C,CAAC,CAAE,EAAE,CAAC,CAENI,MAAM,CAAC7C,MAAM,CAAGA,MAAM,CAEtB,mBACEG,IAAA,QAAK2C,SAAS,CAAC,KAAK,CAAAC,QAAA,CAEjB,CAAChC,KAAK,CAACP,MAAM,cACZL,IAAA,CAACN,SAAS,EAACoB,OAAO,CAAEA,OAAQ,CAAE,CAAC,cAE/Bd,IAAA,CAACL,IAAI,CAAAkD,aAAA,CAAAA,aAAA,IAAKjC,KAAK,MAAEkC,YAAY,CAAER,UAAW,EAAE,CAC7C,CACE,CAAC,CAEV,CACA,cAAe,CAAArC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}